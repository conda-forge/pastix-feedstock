{% set version = "6.4.0" %}

package:
  name: pastix-split
  version: {{ version }}

source:
  url: https://files.inria.fr/pastix/releases/v6/pastix-{{ version }}.tar.gz
  sha256: 891d426188eed56c1075fb34d2d80132593a1536ffc05cf333567f68a4811e55
  patches:
    - patches/message.patch
    - patches/split_python.patch
    - patches/disable_scotch_int_check.patch  # [build_platform != target_platform]

build:
  number: 1
  skip: true  # [win]

outputs:
  - name: libpastix
    script: build_libpastix.sh  # [unix]
    script: bld_libpastix.bat   # [win]
    build:
      run_exports:
        - {{ pin_subpackage('libpastix', max_pin='x.x') }}
    requirements:
      build:
        - {{ stdlib('c') }}                 # [unix]
        - {{ compiler('c') }}               # [unix]
        - {{ compiler('cxx') }}             # [unix]
        - {{ compiler('fortran') }}         # [unix]
        - {{ stdlib('m2w64_c') }}           # [win]
        - {{ compiler('m2w64_c') }}         # [win]
        - {{ compiler('m2w64_cxx') }}       # [win]
        - {{ compiler('m2w64_fortran') }}   # [win]
        - cmake
        - ninja
        - pkgconfig

      host:
        - libblas
        - libcblas
        - liblapack
        - liblapacke
        - libscotch
        - libhwloc
        - metis

    test:
      commands:
        - test -f ${PREFIX}/lib/libpastix${SHLIB_EXT}              # [unix]
        - if not exist %LIBRARY_PREFIX%\\pastix%SHLIB_EXT% exit 1  # [win]

  - name: pastix
    script: build_python.sh
    build:
      noarch: python
      skip: true   # [not linux64]
    requirements:
      build:
        - cmake
        # We don't actually need C stuff here, but just to keep the build scripts happy
        - {{ stdlib('c') }}                 # [unix]
        - {{ compiler('c') }}               # [unix]
        - {{ compiler('cxx') }}             # [unix]
        - {{ compiler('fortran') }}         # [unix]
        - ninja
        - pkgconfig
      host:
        - python >=3.8
        - {{ pin_subpackage('libpastix', max_pin='x.x.x') }}
      run:
        - python >=3.8
        - numpy
        - scipy
        - {{ pin_subpackage('libpastix', max_pin='x.x.x') }}
    test:
      requires:
        - pip
      commands:
        - pip check
      imports:
        - pastix
        - spm

about:
  home: https://solverstack.gitlabpages.inria.fr/pastix/
  summary: 'library for solving sparse real and complex linear systems of equations'
  license: LGPL-3.0-or-later
  license_file: LICENSE
  description: |
    PaStiX (Parallel Sparse matriX package) is a scientific library that 
    provides a high performance parallel solver for very large sparse linear 
    systems based on direct methods. Numerical algorithms are implemented 
    in single or double precision (real or complex) using LLt, LDLt and LU 
    with static pivoting (for non symmetric matrices having a symmetric pattern). 
    This solver also provides some low-rank compression methods to reduce the 
    memory footprint and/or the time-to-solution.
  doc_url: https://solverstack.gitlabpages.inria.fr/pastix/
  dev_url: https://gitlab.inria.fr/solverstack/pastix

extra:
  recipe-maintainers:
    - looooo
